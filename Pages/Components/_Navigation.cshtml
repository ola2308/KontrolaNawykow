@using System.Text.RegularExpressions;

<div class="header-tabs">
    <div class="tabs-container">
        <a href="/Diet/Index" class="tab-button @if(comparePage("\\G\\/Diet\\/Index")){@Active}">Dieta</a>
        <a href="/ToDo/Index" class="tab-button @if(comparePage("\\G\\/ToDo\\/")){@Active}">ToDo</a>
        <a href="/Admin/Dashboard" class="tab-button @if(comparePage("\\G\\/Admin\\/")){@Active}">Admin</a>
        <a href="/YourDietician/Index" class="tab-button @if(comparePage("\\G\\/YourDietician\\/")){@Active}">Twój dietetyk</a>
    </div>
    <div class="profile-button">
        <a href="/Profile/Index" class="profile-link">Mój profil <i class="fas fa-user-cog"></i></a>
    </div>
</div>
@functions {
    String Active = "active";

    //Sprawdza idealne dopasowanie wczytywanej ścieżki do podanej
    bool isCurrentPage(string page)
    {
        return page == ViewContext.RouteData.Values["page"] as string;
    }

    //Sprawdzenie z wykorzystaniem regex - przydatne gdy np. chcemy również akceptować wszystkie postrony
    bool comparePage(string regex)
    {
        if (ViewContext.RouteData.Values["page"] == null) return false;

        var matches = Regex.Matches(ViewContext.RouteData.Values["page"] as string, regex);

        return matches.Count != 0;        
    }
}