@using System.Text.RegularExpressions;

<!-- Header Navigation -->
    <div class="navigation-header">
        <div class="nav-tabs">
            <a href="/Diet" class="nav-tab">Dieta</a>
            <a href="/ToDo" class="nav-tab">ToDo</a>
            <a href="/Admin/Dashboard" class="nav-tab active">Admin</a>
            <a href="/YourDietician/Index" class="nav-tab">Twój dietetyk</a>
            <a href="/Fridge/Index" class="nav-tab">Lodówka</a> 
        </div>
        <div class="nav-actions">
            <form method="post" action="/Account/Logout" style="display: inline;">
                <a href="/Account/Logout" class="logout-btn">🚪 Wyloguj</a>
            </form>
        </div>
    </div>
@functions {
    String Active = "active";

    //Sprawdza idealne dopasowanie wczytywanej ścieżki do podanej
    bool isCurrentPage(string page)
    {
        return page == ViewContext.RouteData.Values["page"] as string;
    }

    //Sprawdzenie z wykorzystaniem regex - przydatne gdy np. chcemy również akceptować wszystkie postrony
    bool comparePage(string regex)
    {
        if (ViewContext.RouteData.Values["page"] == null) return false;

        var matches = Regex.Matches(ViewContext.RouteData.Values["page"] as string, regex);

        return matches.Count != 0;        
    }
}